# fix colors in Neovim
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g default-terminal        'screen-256color'
# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -g base-index 1           # start indexing windows at 1 instead of 0
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g escape-time 0          # zero-out escape time delay
set -g history-limit 1000000  # significantly increase history size
set -g mouse on               # enable mouse support
set -g renumber-windows on    # renumber all windows when any window is closed
set -g set-clipboard on       # use system clipboard
set -g status-interval 2      # update status every 2 seconds
set -g status-left-length 200 # increase status line length
set -g status-position top    # macOS / darwin style

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

bind T 

# split panes using | and -
bind | split-window -h
bind - split-window -v

# Remap so it doesn't ask me
bind x kill-pane
bind-key -n M-] next-layout
bind-key -n M-[ previous-layout

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf
# bind M-] swap-pane -s {next}

# Sync Neovim + Tmux pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n 'S-Left' if-shell "$is_vim" 'send-keys S-Left' 'resize-pane -L 3'
bind-key -n 'S-Down' if-shell "$is_vim" 'send-keys S-Down' 'resize-pane -D 3'
bind-key -n 'S-Up' if-shell "$is_vim" 'send-keys S-Up' 'resize-pane -U 3'
bind-key -n "S-Right" if-shell "$is_vim" 'send-keys S-Right' 'resize-pane -R 3'

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
unbind -T copy-mode-vi MouseDragEnd1Pane

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'aserowy/tmux.nvim'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'fcsonline/tmux-thumbs'

set -g @tmux-nvim-navigation-keybinding-left 'C-h'
set -g @tmux-nvim-navigation-keybinding-down 'C-j'
set -g @tmux-nvim-navigation-keybinding-up 'C-k'
set -g @tmux-nvim-navigation-keybinding-right 'C-l'
set -g @tmux-nvim-resize-keybinding-left 'S-Left'
set -g @tmux-nvim-resize-keybinding-down 'S-Down'
set -g @tmux-nvim-resize-keybinding-up 'S-Up'
set -g @tmux-nvim-resize-keybinding-right 'S-Right'
set -g @tmux-nvim-resize-keybinding-right 'S-Right'
set -g @tmux-nvim-resize-step-x 5
set -g @tmux-nvim-resize-step-y 5

# set -g @catppuccin_window_default_fill "all"
# set -g @catppuccin_window_left_separator "ÓÇ∫‚ñà"
# set -g @catppuccin_window_right_separator "‚ñàÓÇº "
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_middle_separator "  ÓÇ∫‚ñà"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#{pane_current_path}"
# set -g @catppuccin_status_modules_right "session"
# set -g @catppuccin_status_left_separator  "ÓÇ∂"
# set -g @catppuccin_status_right_separator " ÓÇ∂"
# set -g @catppuccin_status_right_separator_inverse "yes"
# set -g @catppuccin_status_fill "all"
# set -g @catppuccin_status_connect_separator "no"

unbind t
# set -g @t-bind 't'
bind-key "t" run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
		--no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
)\""

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
